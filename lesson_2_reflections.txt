1. What happens when you initialize a repository? Why do you need to do it?

When I initialize a repository an empty .git catalogue is created. I need to do it to tell Git which files I want to have in my repository.

2. How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area is a temporary area where files can be added and, I assume, removed from. It is temporary unlike the working directory and repository. It only contains files that have been added to it manually. It offers me a possibility to manipulate which files will be in the commit, it gives me a chance to change my mind before I do an irreversible commit. 

3. How can you use the staging area to make sure you have one commit per logical change?

I can use git diff to check the differences between the working directory and the staging area. I can also use git diff --staged to check the differences between staging area and the last commit. I can add and remove files from the staging area to make sure that the changes in one commit are logical. 

4. What are some situations when branches would be helpful in keeping your history organized? How would branches help?

I can have several versions like a test version containing the newest fixes that are not tested yet, and a production version which has been tested well enough and is delivered to the users. Branches could keep my work more organized and make it possible to have several different versions of an application for different uses. 

5. How do the diagrams help you visualize the branch structure?

The diagrams show me where each branch starts and ends and what commits have been done on the master branch while I was working on my own branch. They help me visualize the situation so that I know where I am, where I can merge and where I can checkout.